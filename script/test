#!/bin/bash
#
#  Copyright (c) 2018, The OpenThread Authors.
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#  3. Neither the name of the copyright holder nor the
#     names of its contributors may be used to endorse or promote products
#     derived from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#  POSSIBILITY OF SUCH DAMAGE.
#
#    Description:
#      This file runs various tests.
#

set -e
set -o pipefail

readonly BUILD_JOBS="$(getconf _NPROCESSORS_ONLN)"
readonly BUILD_DIR=build
readonly PLATFORM_NAME="${PLATFORM:-nrf52}"

readonly COLOR_PASS='\033[0;32m'
readonly COLOR_FAIL='\033[0;31m'
readonly COLOR_NONE='\033[0m'

print_result() {
    pass=$1

    if ${pass}; then
        prefix="${COLOR_PASS}PASS${COLOR_NONE}"
    else
        prefix="${COLOR_FAIL}FAIL${COLOR_NONE}"
    fi
    shift

    echo -e "${prefix}" $*

    ${pass}
}

do_build() {
    [[ -d "${BUILD_DIR}" ]] || mkdir "${BUILD_DIR}"
    (cd "${BUILD_DIR}" && cmake .. -DCMAKE_TOOLCHAIN_FILE=../cmake/arm-none-eabi.cmake -DPLATFORM_NAME="${PLATFORM_NAME}" && make -j${BUILD_JOBS})
}

do_clean() {
    [[ ! -d "${BUILD_DIR}" ]] || rm -rvf "${BUILD_DIR}"

    do_build
}

check_pretty() {
    pass=false
    find src include \( -name '*.c' -o -name '*.cpp' -o -name '*.h' -o -name '*.hpp' \) | while read file; do
        echo Checking "${file}"
        third_party/openthread/repo/script/clang-format-check.sh "${file}" || break
        pass=true
    done
    print_result "${pass}" pretty check
}

print_usage() {
    cat <<EOF
USAGE: $0 COMMAND

COMMAND:
    build       Build project for running tests. This can be used to rebuild the project for changes.
    clean       Clean built files to prepare new build.
    pretty      Check pretty for all first party source code.
    help        Print this help.

EXAMPLES:
    $0 clean build
EOF
    exit $1
}

main()
{
    while [[ -n "$1" ]]; do
        case "$1" in
            clean)
                do_clean
                ;;
            build)
                do_build
                ;;
            pretty)
                check_pretty
                ;;
            help)
                print_usage
                ;;
            *)
                print_usage 1
                ;;
        esac
        shift
    done
}

main "$@"
